{"ast":null,"code":"var _jsxFileName = \"/home/amanda-oliveira/Projects/armazenar-repositorios/frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport api from './services/api';\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    api.get('repositories').then(response => {\n      setRepositories(response.data);\n    });\n  }, []);\n\n  async function handleAddRepository() {\n    api.post('repositories', {\n      title: `Repositório ${Date.now()}`,\n      url: 'https://github.com/oliveira-amanda/armazenar-repositorios',\n      tech: 'ReactJS, ReactNative, NodeJS'\n    });\n  }\n\n  async function handleRemoveRepository(id) {// TODO\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"li\", {\n    key: repository.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, repository.title))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRemoveRepository(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Remover\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amanda-oliveira/Projects/armazenar-repositorios/frontend/src/App.js"],"names":["React","useState","useEffect","api","App","repositories","setRepositories","get","then","response","data","handleAddRepository","post","title","Date","now","url","tech","handleRemoveRepository","id","map","repository"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAO,cAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBC,IAAxB,CAA6BC,QAAQ,IAAI;AACvCH,MAAAA,eAAe,CAACG,QAAQ,CAACC,IAAV,CAAf;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,iBAAeC,mBAAf,GAAqC;AACnCR,IAAAA,GAAG,CAACS,IAAJ,CAAS,cAAT,EAAyB;AACvBC,MAAAA,KAAK,EAAG,eAAcC,IAAI,CAACC,GAAL,EAAW,EADV;AAEvBC,MAAAA,GAAG,EAAE,2DAFkB;AAGvBC,MAAAA,IAAI,EAAE;AAHiB,KAAzB;AAKD;;AAED,iBAAeC,sBAAf,CAAsCC,EAAtC,EAA0C,CACxC;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,YAAY,CAACe,GAAb,CAAiBC,UAAU,iBAC1B;AAAI,IAAA,GAAG,EAAEA,UAAU,CAACF,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,UAAU,CAACR,KADd,CADD,CADL,CADF,eASE;AAAQ,IAAA,OAAO,EAAE,MAAMK,sBAAsB,CAAC,CAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,eAaE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEP,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF,CADF;AAmBD;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from './services/api'\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([])\n\n  useEffect(() => {\n    api.get('repositories').then(response => {\n      setRepositories(response.data)\n    })\n  }, [])\n\n  async function handleAddRepository() {\n    api.post('repositories', {\n      title: `Repositório ${Date.now()}`,\n      url: 'https://github.com/oliveira-amanda/armazenar-repositorios',\n      tech: 'ReactJS, ReactNative, NodeJS'\n    })\n  }\n\n  async function handleRemoveRepository(id) {\n    // TODO\n  }\n\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n          {repositories.map(repository => (\n            <li key={repository.id}>\n              {repository.title}\n            </li>\n          ))}\n      </ul>\n\n      <button onClick={() => handleRemoveRepository(1)}>\n            Remover\n      </button>\n\n      <button type=\"button\" onClick={handleAddRepository}>\n        Adicionar\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}